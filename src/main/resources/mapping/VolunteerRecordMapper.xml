<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xhb.volunteerplatform.mapper.VolunteerRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.xhb.volunteerplatform.entity.VolunteerRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="volunteer_id" property="volunteerId" jdbcType="INTEGER" />
    <result column="activity_id" property="activityId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="volunteer_evaluate_content" property="volunteerEvaluateContent" jdbcType="VARCHAR" />
    <result column="volunteer_evaluate_score" property="volunteerEvaluateScore" jdbcType="REAL" />
    <result column="worker_evaluate" property="workerEvaluate" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="volunteers" type="cn.xhb.volunteerplatform.entity.Volunteer" >
  </resultMap>

  <resultMap id="volunteerEvaluateInfo" type="cn.xhb.volunteerplatform.dto.WorkerGetVolunteerEvaluateInfoResponse" >

  </resultMap>


  <sql id="Base_Column_List" >
    id, volunteer_id, activity_id, status, volunteer_evaluate_content, worker_evaluate, create_time,
    delete_time,volunteer_evaluate_score,update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from volunteer_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByActivity"  resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*)
    from volunteer_record
    where activity_id = #{activityId,jdbcType=INTEGER} and status != 1
  </select>
  <select id="countByVolunteerIdAndActivityId"  resultType="java.lang.Integer" >
    select count(*)
    from volunteer_record
    where activity_id = #{activityId,jdbcType=INTEGER} and volunteer_id = #{volunteerId,jdbcType=INTEGER}
  </select>
  <select id="countByActivityIdAndStatus"  resultType="java.lang.Integer" >
    select count(*)
    from volunteer_record
    where activity_id = #{activityId,jdbcType=INTEGER} and status &gt;= #{status,jdbcType=INTEGER}
  </select>


  <select id="selectByVolunteerId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from volunteer_record
    where volunteer_id = #{volunteerId,jdbcType=INTEGER}
  </select>

  <select id="selectByActivityIdAndStatus" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from volunteer_record
    where activity_id = #{activityId,jdbcType=INTEGER} and status = #{status,jdbcType=INTEGER}
  </select>

  <select id="selectByActivityIdAndTwoStatus" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from volunteer_record
    where activity_id = #{activityId,jdbcType=INTEGER} and status in (#{status1,jdbcType=INTEGER},#{status2,jdbcType=INTEGER})
  </select>

  <select id="selectVolunteerInfoByActivityId" resultMap="volunteers">
    select b.*
    from volunteer_record as a, volunteer as b
    where a.volunteer_id = b.id and a.activity_id = #{activityId,jdbcType=INTEGER} and status in (2, 3)
  </select>

  <select id="selectVolunteerEvaluateInfoByActivityId" resultMap="volunteerEvaluateInfo">
    select b.id,b.name,b.gender,a.volunteer_evaluate_score,a.volunteer_evaluate_content
    from volunteer_record as a, volunteer as b
    where a.volunteer_id = b.id and a.activity_id = #{activityId,jdbcType=INTEGER} and status > 3;

  </select>








  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from volunteer_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.xhb.volunteerplatform.entity.VolunteerRecord" >
    insert into volunteer_record (id, volunteer_id, activity_id, 
      status, volunteer_evaluate_content, worker_evaluate,
      create_time, delete_time,volunteer_evaluate_score,update_time)
    values (#{id,jdbcType=INTEGER}, #{volunteerId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{volunteerEvaluateContent,jdbcType=VARCHAR}, #{workerEvaluate,jdbcType=REAL},
      #{createTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP},#{volunteerEvaluateScore,jdbcType=REAL},#{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.xhb.volunteerplatform.entity.VolunteerRecord" >
    insert into volunteer_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="volunteerId != null" >
        volunteer_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="volunteerEvaluateContent != null" >
        volunteer_evaluate_content,
      </if>
      <if test="workerEvaluate != null" >
        worker_evaluate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="volunteerEvaluateScore != null" >
        volunteer_evaluate_score,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="volunteerId != null" >
        #{volunteerId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="volunteerEvaluateContent != null" >
        #{volunteerEvaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="workerEvaluate != null" >
        #{workerEvaluate,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="volunteerEvaluateScore != null" >
        #{volunteerEvaluateScore,jdbcType=REAL},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xhb.volunteerplatform.entity.VolunteerRecord" >
    update volunteer_record
    <set >
      <if test="volunteerId != null" >
        volunteer_id = #{volunteerId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="volunteerEvaluateContent != null" >
        volunteer_evaluate_content = #{volunteerEvaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="workerEvaluate != null" >
        worker_evaluate = #{workerEvaluate,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="volunteerEvaluateScore != null" >
        volunteer_evaluate_score = #{volunteerEvaluateScore,jdbcType=REAL},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xhb.volunteerplatform.entity.VolunteerRecord" >
    update volunteer_record
    set volunteer_id = #{volunteerId,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      volunteer_evaluate_content = #{volunteerEvaluateContent,jdbcType=VARCHAR},
      worker_evaluate = #{workerEvaluate,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      volunteer_evaluate_score = #{volunteerEvaluateScore,jdbcType=REAL},update_time = #{updateTime,jdbcType=TIMESTAMP},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>